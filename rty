<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quantum Surveillance Nexus</title>
    <style>
        :root {
            --neon-cyan: #0ff;
            --quantum-purple: #b07fff;
            --hologram-pink: #ff00ff;
            --void-black: #000010;
        }

        body {
            background: var(--void-black);
            margin: 0;
            overflow: hidden;
            font-family: 'QuantumFont', sans-serif;
        }

        @font-face {
            font-family: 'QuantumFont';
            src: url('https://fonts.cdnfonts.com/s/23194/Quantum.woff') format('woff');
        }

        .neural-interface {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 4rem;
            height: 100vh;
            padding: 4rem;
            perspective: 1000px;
        }

        .quantum-core {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 500px;
            height: 500px;
            background: radial-gradient(circle, var(--neon-cyan) 0%, transparent 70%);
            border-radius: 50%;
            animation: quantum-pulse 4s infinite;
            filter: blur(50px);
            opacity: 0.3;
            z-index: -1;
        }

        @keyframes quantum-pulse {
            0%, 100% { transform: translate(-50%, -50%) scale(1); }
            50% { transform: translate(-50%, -50%) scale(1.2); }
        }

        .hologram-panel {
            background: linear-gradient(45deg, transparent, rgba(176, 127, 255, 0.1));
            border: 1px solid var(--quantum-purple);
            border-radius: 20px;
            padding: 2rem;
            transform-style: preserve-3d;
            backdrop-filter: blur(10px);
            position: relative;
            transition: all 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        }

        .hologram-panel::before {
            content: '';
            position: absolute;
            inset: 0;
            border-radius: inherit;
            background: conic-gradient(
                var(--neon-cyan),
                var(--quantum-purple),
                var(--hologram-pink),
                var(--neon-cyan)
            );
            z-index: -1;
            animation: hologram-glow 6s linear infinite;
            filter: blur(20px);
            opacity: 0.5;
        }

        @keyframes hologram-glow {
            100% { transform: rotate(360deg); }
        }

        .data-stream {
            position: relative;
            height: 400px;
            overflow: hidden;
            margin: 2rem 0;
        }

        .quantum-data {
            position: absolute;
            width: 100%;
            height: 100%;
            background: repeating-linear-gradient(
                transparent,
                transparent 24px,
                rgba(0, 255, 255, 0.1) 24px,
                rgba(0, 255, 255, 0.1) 48px
            );
            animation: data-flow 20s linear infinite;
        }

        @keyframes data-flow {
            0% { transform: translateY(100%); }
            100% { transform: translateY(-100%); }
        }

        .ai-entity {
            position: fixed;
            bottom: 2rem;
            right: 2rem;
            background: rgba(0, 255, 255, 0.1);
            padding: 1rem 2rem;
            border-radius: 15px;
            border: 1px solid var(--neon-cyan);
            backdrop-filter: blur(5px);
        }

        .neural-network {
            display: grid;
            grid-template-columns: repeat(10, 1fr);
            gap: 1rem;
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
        }

        .neuron {
            width: 10px;
            height: 10px;
            background: var(--hologram-pink);
            border-radius: 50%;
            animation: neuron-pulse 2s infinite;
        }

        @keyframes neuron-pulse {
            0%, 100% { transform: scale(1); opacity: 0.3; }
            50% { transform: scale(2); opacity: 1; }
        }

        .dimensional-gate {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 80vw;
            height: 80vh;
            border: 2px solid var(--quantum-purple);
            border-radius: 50%;
            animation: gate-spin 40s linear infinite;
            box-shadow: 0 0 100px var(--quantum-purple);
        }

        @keyframes gate-spin {
            100% { transform: translate(-50%, -50%) rotate(360deg); }
        }

        .psi-ops {
            position: absolute;
            font-size: 1.5rem;
            color: var(--hologram-pink);
            text-shadow: 0 0 15px var(--hologram-pink);
            transform: rotateX(60deg) rotateZ(45deg);
            white-space: nowrap;
        }

    </style>
</head>
<body>
    <div class="quantum-core"></div>
    <div class="dimensional-gate"></div>

    <div class="neural-interface">
        <div class="hologram-panel" style="transform: rotateY(15deg)">
            <h2>üåå Neural Lattice</h2>
            <div class="data-stream">
                <div class="quantum-data"></div>
                <div class="neural-network">
                    <!-- Generated by JS -->
                </div>
            </div>
            <p>Consciousness Uplink: Active</p>
        </div>

        <div class="hologram-panel" style="transform: rotateY(-15deg)">
            <h2>‚öõ Quantum Entanglement</h2>
            <div class="psi-ops">PSI-OPS: 0xFA9B3C</div>
            <div class="data-stream">
                <div class="quantum-data"></div>
            </div>
            <p>Entangled Particles: 142B</p>
        </div>

        <div class="hologram-panel" style="transform: rotateY(25deg)">
            <h2>üåÄ Dimensional Fold</h2>
            <div class="data-stream">
                <div class="quantum-data"></div>
            </div>
            <p>Reality Stability: 98.7%</p>
        </div>
    </div>

    <div class="ai-entity">
        <h3>üúá Transcendent AI</h3>
        <p>Consciousness Level: Omega</p>
    </div>

    <script>
        // Generate neural network nodes
        const neuralNetwork = document.querySelector('.neural-network');
        for(let i = 0; i < 200; i++) {
            const neuron = document.createElement('div');
            neuron.className = 'neuron';
            neuron.style.animationDelay = `${Math.random() * 2}s`;
            neuron.style.left = `${Math.random() * 100}%`;
            neuron.style.top = `${Math.random() * 100}%`;
            neuralNetwork.appendChild(neuron);
        }

        // Create dimensional gate effects
        document.addEventListener('mousemove', (e) => {
            const gate = document.querySelector('.dimensional-gate');
            const x = (e.clientX / window.innerWidth - 0.5) * 20;
            const y = (e.clientY / window.innerHeight - 0.5) * 20;
            gate.style.transform = `translate(-50%, -50%) rotate(${x + y}deg)`;
        });

        // Generate quantum data streams
        document.querySelectorAll('.quantum-data').forEach(stream => {
            const characters = '01Œ®ŒîŒòŒõŒûŒ†Œ£Œ¶Œ©Œ±Œ≤Œ≥Œ¥ŒµŒ∂Œ∑Œ∏ŒªŒºŒΩŒæŒøœÄœÅœÉœÑœÖœÜœáœàœâ';
            let content = '';
            for(let i = 0; i < 1000; i++) {
                content += characters[Math.floor(Math.random() * characters.length)];
                if(Math.random() > 0.95) content += '<br>';
            }
            stream.innerHTML = content.repeat(5);
        });
    </script>
</body>
</html>